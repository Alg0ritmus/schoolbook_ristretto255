from hashlib import sha512
P_HEX = [
    0xec, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x7f,
]

# Number test vectors

# Hex test vectors

D2_HEX = [
    0xf159, 0x26b2, 0x9b94, 0xebd6,
    0xb156, 0x8283, 0x149a, 0x00e0,
    0xd130, 0xeef3, 0x80f2, 0x198e,
    0xfce7, 0x56df, 0xd9dc, 0x2406
]

HEX_1 = [
    0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
]

HEX_2 = [
    0x01, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x7f,
]

HEX_3 = [
    0xed, 0x57, 0xff, 0xd8,
    0xc9, 0x14, 0xfb, 0x20,
    0x14, 0x71, 0xd1, 0xc3,
    0xd2, 0x45, 0xce, 0x3c,
    0x74, 0x6f, 0xcb, 0xe6,
    0x3a, 0x36, 0x79, 0xd5,
    0x1b, 0x6a, 0x51, 0x6e,
    0xbe, 0xbe, 0x0e, 0x20,
]

HEX_4 = [
    0xc3, 0x4c, 0x4e, 0x18,
    0x26, 0xe5, 0xd4, 0x03,
    0xb7, 0x8e, 0x24, 0x6e,
    0x88, 0xaa, 0x05, 0x1c,
    0x36, 0xcc, 0xf0, 0xaa,
    0xfe, 0xbf, 0xfe, 0x13,
    0x7d, 0x14, 0x8a, 0x2b,
    0xf9, 0x10, 0x45, 0x62,
]

HEX_5 = [
    0xc9, 0x40, 0xe5, 0xa4,
    0x40, 0x41, 0x57, 0xcf,
    0xb1, 0x62, 0x8b, 0x10,
    0x8d, 0xb0, 0x51, 0xa8,
    0xd4, 0x39, 0xe1, 0xa4,
    0x21, 0x39, 0x4e, 0xc4,
    0xeb, 0xcc, 0xb9, 0xec,
    0x92, 0xa8, 0xac, 0x78,
]

HEX_6 = [
    0x47, 0xcf, 0xc5, 0x49,
    0x7c, 0x53, 0xdc, 0x8e,
    0x61, 0xc9, 0x1d, 0x17,
    0xfd, 0x62, 0x6f, 0xfb,
    0x1c, 0x49, 0xe2, 0xbc,
    0xa9, 0x4e, 0xed, 0x05,
    0x22, 0x81, 0xb5, 0x10,
    0xb1, 0x11, 0x7a, 0x24,
]

HEX_7 = [
    0xf1, 0xc6, 0x16, 0x5d,
    0x33, 0x36, 0x73, 0x51,
    0xb0, 0xda, 0x8f, 0x6e,
    0x45, 0x11, 0x01, 0x0c,
    0x68, 0x17, 0x4a, 0x03,
    0xb6, 0x58, 0x12, 0x12,
    0xc7, 0x1c, 0x0e, 0x1d,
    0x02, 0x6c, 0x3c, 0x72,
]

HEX_8 = [
    0x87, 0x26, 0x0f, 0x7a,
    0x2f, 0x12, 0x49, 0x51,
    0x18, 0x36, 0x0f, 0x02,
    0xc2, 0x6a, 0x47, 0x0f,
    0x45, 0x0d, 0xad, 0xf3,
    0x4a, 0x41, 0x3d, 0x21,
    0x04, 0x2b, 0x43, 0xb9,
    0xd9, 0x3e, 0x13, 0x09,
]

# Negative vectors
HEX_ALL = [
    HEX_1, HEX_2, HEX_3, HEX_4,
    HEX_5, HEX_6, HEX_7, HEX_8,
]

DEC_ALL = [
    57896044618658097711785492504343953926634992332820282019728792003956564819948,
    236,
    43395981139273074876507941764684574595537234604803325968249716566753441523712,
    13447355864474782990064147865452522366103789347284224292039261867954817577770,
    3313441639055640068739630253660246146533292736357745798877292175242976476964,
    41397104624399426060398833257223205409790519106274891578395515334690214654118,
    6225623610693817694070834656612723216338662007248481655499821746921891510524,
    53791225109085577843242291480306666131143723373880160896372464448377688480102,
]


VECTOR_TEST = [
    0x76, 0x2d, 0x8d, 0xe0,
    0x45, 0x59, 0xa6, 0xb6,
    0x8d, 0xdd, 0x82, 0xa5,
    0x6a, 0x0b, 0xe3, 0x58,
    0x5f, 0x51, 0x00, 0xc5,
    0x61, 0xa9, 0x84, 0xa8,
    0x71, 0x4e, 0xbc, 0x6a,
    0x0a, 0xae, 0xf2, 0xe2,
]

VECTOR_TEST2 = [
    0xe0, 0x8d, 0x2d, 0x76,
    0xb6, 0xa6, 0x59, 0x45,
    0xa5, 0x82, 0xdd, 0x8d,
    0x58, 0xe3, 0x0b, 0x6a,
    0xc5, 0x00, 0x51, 0x5f,
    0xa8, 0x84, 0xa9, 0x61,
    0x6a, 0xbc, 0x4e, 0x71,
    0xe2, 0xf2, 0xae, 0x11,
]


# hash_to_group test VECTORS

INPUT_VECTORS_HASH_TO_GROUP_STATIC_HEXSTRING = [
    "5d1be09e3d0c82fc538112490e35701979d99e06ca3e2b5b54bffe8b4dc772c14d98b696a1bbfb5ca32c436cc61c16563790306c79eaca7705668b47dffe5bb6",
    "f116b34b8f17ceb56e8732a60d913dd10cce47a6d53bee9204be8b44f6678b270102a56902e2488c46120e9276cfe54638286b9e4b3cdb470b542d46c2068d38",
    "8422e1bbdaab52938b81fd602effb6f89110e1e57208ad12d9ad767e2e25510c27140775f9337088b982d83d7fcf0b2fa1edffe51952cbe7365e95c86eaf325c",
    "ac22415129b61427bf464e17baee8db65940c233b98afce8d17c57beeb7876c2150d15af1cb1fb824bbd14955f2b57d08d388aab431a391cfc33d5bafb5dbbaf",
    "165d697a1ef3d5cf3c38565beefcf88c0f282b8e7dbd28544c483432f1cec7675debea8ebb4e5fe7d6f6e5db15f15587ac4d4d4a1de7191e0c1ca6664abcc413",
    "a836e6c9a9ca9f1e8d486273ad56a78c70cf18f0ce10abb1c7172ddd605d7fd2979854f47ae1ccf204a33102095b4200e5befc0465accc263175485f0e17ea5c",
    "2cdc11eaeb95daf01189417cdddbf95952993aa9cb9c640eb5058d09702c74622c9965a697a3b345ec24ee56335b556e677b30e6f90ac77d781064f866a3c982"
]

INPUT_VECTORS_HASH_TO_GROUP_STRINGBYTES = [
    b"Ristretto is traditionally a short shot of espresso coffee",
    b"made with the normal amount of ground coffee but extracted with",
    b"about half the amount of water in the same amount of time",
    b"by using a finer grind.",
    b"This produces a concentrated shot of coffee per volume.",
    b"Just pulling a normal shot short will produce a weaker shot",
    b"and is not a Ristretto as some believe.",
]

INPUT_VECTORS_HASH_TO_GROUP_HEXSTRING = [
    sha512(INPUT_VECTORS_HASH_TO_GROUP_STRINGBYTES[0]).hexdigest(),
    sha512(INPUT_VECTORS_HASH_TO_GROUP_STRINGBYTES[1]).hexdigest(),
    sha512(INPUT_VECTORS_HASH_TO_GROUP_STRINGBYTES[2]).hexdigest(),
    sha512(INPUT_VECTORS_HASH_TO_GROUP_STRINGBYTES[3]).hexdigest(),
    sha512(INPUT_VECTORS_HASH_TO_GROUP_STRINGBYTES[4]).hexdigest(),
    sha512(INPUT_VECTORS_HASH_TO_GROUP_STRINGBYTES[5]).hexdigest(),
    sha512(INPUT_VECTORS_HASH_TO_GROUP_STRINGBYTES[6]).hexdigest(),
]

OUTPUT_VECTORS_HASH_TO_GROUP = [
    "3066f82a1a747d45120d1740f14358531a8f04bbffe6a819f86dfe50f44a0a46",
    "f26e5b6f7d362d2d2a94c5d0e7602cb4773c95a2e5c31a64f133189fa76ed61b",
    "006ccd2a9e6867e6a2c5cea83d3302cc9de128dd2a9a57dd8ee7b9d7ffe02826",
    "f8f0c87cf237953c5890aec3998169005dae3eca1fbb04548c635953c817f92a",
    "ae81e7dedf20a497e10c304a765c1767a42d6e06029758d2d7e8ef7cc4c41179",
    "e2705652ff9f5e44d3e841bf1c251cf7dddb77d140870d1ab2ed64f1a9ce8628",
    "80bd07262511cdde4863f8a7434cef696750681cb9510eea557088f76d9e5065",
]

OUTPUT_VECTORS_HASH_TO_GROUP_BYTES = [
        [0x30, 0x66, 0xf8, 0x2a, 0x1a, 0x74, 0x7d, 0x45, 0x12, 0xd, 0x17, 0x40, 0xf1, 0x43, 0x58, 0x53, 0x1a, 0x8f, 0x4, 0xbb, 0xff, 0xe6, 0xa8, 0x19, 0xf8, 0x6d, 0xfe, 0x50, 0xf4, 0x4a, 0xa, 0x46],
        [0xf2, 0x6e, 0x5b, 0x6f, 0x7d, 0x36, 0x2d, 0x2d, 0x2a, 0x94, 0xc5, 0xd0, 0xe7, 0x60, 0x2c, 0xb4, 0x77, 0x3c, 0x95, 0xa2, 0xe5, 0xc3, 0x1a, 0x64, 0xf1, 0x33, 0x18, 0x9f, 0xa7, 0x6e, 0xd6, 0x1b],
        [0x0, 0x6c, 0xcd, 0x2a, 0x9e, 0x68, 0x67, 0xe6, 0xa2, 0xc5, 0xce, 0xa8, 0x3d, 0x33, 0x2, 0xcc, 0x9d, 0xe1, 0x28, 0xdd, 0x2a, 0x9a, 0x57, 0xdd, 0x8e, 0xe7, 0xb9, 0xd7, 0xff, 0xe0, 0x28, 0x26],
        [0xf8, 0xf0, 0xc8, 0x7c, 0xf2, 0x37, 0x95, 0x3c, 0x58, 0x90, 0xae, 0xc3, 0x99, 0x81, 0x69, 0x0, 0x5d, 0xae, 0x3e, 0xca, 0x1f, 0xbb, 0x4, 0x54, 0x8c, 0x63, 0x59, 0x53, 0xc8, 0x17, 0xf9, 0x2a],
        [0xae, 0x81, 0xe7, 0xde, 0xdf, 0x20, 0xa4, 0x97, 0xe1, 0xc, 0x30, 0x4a, 0x76, 0x5c, 0x17, 0x67, 0xa4, 0x2d, 0x6e, 0x6, 0x2, 0x97, 0x58, 0xd2, 0xd7, 0xe8, 0xef, 0x7c, 0xc4, 0xc4, 0x11, 0x79],
        [0xe2, 0x70, 0x56, 0x52, 0xff, 0x9f, 0x5e, 0x44, 0xd3, 0xe8, 0x41, 0xbf, 0x1c, 0x25, 0x1c, 0xf7, 0xdd, 0xdb, 0x77, 0xd1, 0x40, 0x87, 0xd, 0x1a, 0xb2, 0xed, 0x64, 0xf1, 0xa9, 0xce, 0x86, 0x28],
        [0x80, 0xbd, 0x7, 0x26, 0x25, 0x11, 0xcd, 0xde, 0x48, 0x63, 0xf8, 0xa7, 0x43, 0x4c, 0xef, 0x69, 0x67, 0x50, 0x68, 0x1c, 0xb9, 0x51, 0xe, 0xea, 0x55, 0x70, 0x88, 0xf7, 0x6d, 0x9e, 0x50, 0x65]
    ]


# SMALL_MULTIPLES_OF_GENERATOR_VECTORS
SMALL_MULTIPLES_OF_GENERATOR_VECTORS = [
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    [0xe2, 0xf2, 0xae, 0x0a, 0x6a, 0xbc, 0x4e, 0x71, 0xa8, 0x84, 0xa9, 0x61, 0xc5, 0x00, 0x51, 0x5f,
        0x58, 0xe3, 0x0b, 0x6a, 0xa5, 0x82, 0xdd, 0x8d, 0xb6, 0xa6, 0x59, 0x45, 0xe0, 0x8d, 0x2d, 0x76],
    [0x6a, 0x49, 0x32, 0x10, 0xf7, 0x49, 0x9c, 0xd1, 0x7f, 0xec, 0xb5, 0x10, 0xae, 0x0c, 0xea, 0x23,
        0xa1, 0x10, 0xe8, 0xd5, 0xb9, 0x01, 0xf8, 0xac, 0xad, 0xd3, 0x09, 0x5c, 0x73, 0xa3, 0xb9, 0x19],
    [0x94, 0x74, 0x1f, 0x5d, 0x5d, 0x52, 0x75, 0x5e, 0xce, 0x4f, 0x23, 0xf0, 0x44, 0xee, 0x27, 0xd5,
        0xd1, 0xea, 0x1e, 0x2b, 0xd1, 0x96, 0xb4, 0x62, 0x16, 0x6b, 0x16, 0x15, 0x2a, 0x9d, 0x02, 0x59],
    [0xda, 0x80, 0x86, 0x27, 0x73, 0x35, 0x8b, 0x46, 0x6f, 0xfa, 0xdf, 0xe0, 0xb3, 0x29, 0x3a, 0xb3,
        0xd9, 0xfd, 0x53, 0xc5, 0xea, 0x6c, 0x95, 0x53, 0x58, 0xf5, 0x68, 0x32, 0x2d, 0xaf, 0x6a, 0x57],
    [0xe8, 0x82, 0xb1, 0x31, 0x01, 0x6b, 0x52, 0xc1, 0xd3, 0x33, 0x70, 0x80, 0x18, 0x7c, 0xf7, 0x68,
        0x42, 0x3e, 0xfc, 0xcb, 0xb5, 0x17, 0xbb, 0x49, 0x5a, 0xb8, 0x12, 0xc4, 0x16, 0x0f, 0xf4, 0x4e],
    [0xf6, 0x47, 0x46, 0xd3, 0xc9, 0x2b, 0x13, 0x05, 0x0e, 0xd8, 0xd8, 0x02, 0x36, 0xa7, 0xf0, 0x00,
        0x7c, 0x3b, 0x3f, 0x96, 0x2f, 0x5b, 0xa7, 0x93, 0xd1, 0x9a, 0x60, 0x1e, 0xbb, 0x1d, 0xf4, 0x03],
    [0x44, 0xf5, 0x35, 0x20, 0x92, 0x6e, 0xc8, 0x1f, 0xbd, 0x5a, 0x38, 0x78, 0x45, 0xbe, 0xb7, 0xdf,
        0x85, 0xa9, 0x6a, 0x24, 0xec, 0xe1, 0x87, 0x38, 0xbd, 0xcf, 0xa6, 0xa7, 0x82, 0x2a, 0x17, 0x6d],
    [0x90, 0x32, 0x93, 0xd8, 0xf2, 0x28, 0x7e, 0xbe, 0x10, 0xe2, 0x37, 0x4d, 0xc1, 0xa5, 0x3e, 0x0b,
        0xc8, 0x87, 0xe5, 0x92, 0x69, 0x9f, 0x02, 0xd0, 0x77, 0xd5, 0x26, 0x3c, 0xdd, 0x55, 0x60, 0x1c],
    [0x02, 0x62, 0x2a, 0xce, 0x8f, 0x73, 0x03, 0xa3, 0x1c, 0xaf, 0xc6, 0x3f, 0x8f, 0xc4, 0x8f, 0xdc,
        0x16, 0xe1, 0xc8, 0xc8, 0xd2, 0x34, 0xb2, 0xf0, 0xd6, 0x68, 0x52, 0x82, 0xa9, 0x07, 0x60, 0x31],
    [0x20, 0x70, 0x6f, 0xd7, 0x88, 0xb2, 0x72, 0x0a, 0x1e, 0xd2, 0xa5, 0xda, 0xd4, 0x95, 0x2b, 0x01,
        0xf4, 0x13, 0xbc, 0xf0, 0xe7, 0x56, 0x4d, 0xe8, 0xcd, 0xc8, 0x16, 0x68, 0x9e, 0x2d, 0xb9, 0x5f],
    [0xbc, 0xe8, 0x3f, 0x8b, 0xa5, 0xdd, 0x2f, 0xa5, 0x72, 0x86, 0x4c, 0x24, 0xba, 0x18, 0x10, 0xf9,
        0x52, 0x2b, 0xc6, 0x00, 0x4a, 0xfe, 0x95, 0x87, 0x7a, 0xc7, 0x32, 0x41, 0xca, 0xfd, 0xab, 0x42],
    [0xe4, 0x54, 0x9e, 0xe1, 0x6b, 0x9a, 0xa0, 0x30, 0x99, 0xca, 0x20, 0x8c, 0x67, 0xad, 0xaf, 0xca,
        0xfa, 0x4c, 0x3f, 0x3e, 0x4e, 0x53, 0x03, 0xde, 0x60, 0x26, 0xe3, 0xca, 0x8f, 0xf8, 0x44, 0x60],
    [0xaa, 0x52, 0xe0, 0x00, 0xdf, 0x2e, 0x16, 0xf5, 0x5f, 0xb1, 0x03, 0x2f, 0xc3, 0x3b, 0xc4, 0x27,
        0x42, 0xda, 0xd6, 0xbd, 0x5a, 0x8f, 0xc0, 0xbe, 0x01, 0x67, 0x43, 0x6c, 0x59, 0x48, 0x50, 0x1f],
    [0x46, 0x37, 0x6b, 0x80, 0xf4, 0x09, 0xb2, 0x9d, 0xc2, 0xb5, 0xf6, 0xf0, 0xc5, 0x25, 0x91, 0x99,
        0x08, 0x96, 0xe5, 0x71, 0x6f, 0x41, 0x47, 0x7c, 0xd3, 0x00, 0x85, 0xab, 0x7f, 0x10, 0x30, 0x1e],
    [0xe0, 0xc4, 0x18, 0xf7, 0xc8, 0xd9, 0xc4, 0xcd, 0xd7, 0x39, 0x5b, 0x93, 0xea, 0x12, 0x4f, 0x3a, 0xd9, 0x90, 0x21, 0xbb, 0x68, 0x1d, 0xfc, 0x33, 0x02, 0xa9, 0xd9, 0x9a, 0x2e, 0x53, 0xe6, 0x4e]
    ]
